/* In the ideation for the third assignment, I was heavily inspired by Getty's website from A1 and from what I learn in class week 9, I decided to choose scrolling as the main action. I have seen many impressive website using scrolling to guide users through their experience before so this experience of my own, I want to apply the similar approach. 
    With that in mind, I explore a lot about css animation and scrolling behavior. Out of them, parallax effect was the most impressive to me and it works excellently with a scenery photograph like this. */

body{
    background-color: rgb(15, 15, 15);
    min-height: 100vh;
    overflow-x: hidden;
    font-family: "Quintessential", serif;
}

.parallax{
    position: relative;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 120vh;
    perspective: 800px;
}

/* Sticky position is also a very common  property used with scrolling. It also makes it looks like all the sections are stacking onto each other one by one.  */
.sticky{
    position: sticky;
    top: 0;
}

/* There are lots of border styling got commented because I use them while writing css to make decisions on the positions of the elements. */
h1{
    font-size: 6.5rem;
    color: yellow;
    top: 15rem;
    /*right: 10rem; */
    /* text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.6); */
    /* border: 1px white solid; */
    width: max-content;
    text-align: center;
}

h2{
    font-size: 1.5rem;
    color: yellow;
    top: 25rem;
    left: 41rem;
    /* text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.6); */
    /* left: 70%; */
    /* left: 100%; */
    /* border: 1px white solid; */
    width: max-content;
    text-align: center;
}

/* h3{
    font-size: 100px;
    color: yellow;
} */


.parallax img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
    height: 100vh;
}


/* For this animation, I separated the image into three layers and animate them along the Z axis, with some offset in the value, to create the illusion of depth. This is also the concept of parallax motion. */
#background{
    z-index: 1;
    transform: translateZ(100px);
    animation: backgroundPositionZ linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 100vh;
}
#midground{
    z-index: 3;
    transform: translateZ(-70px);
    animation: midgroundPositionZ linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 100vh;
}
#foreground{
    z-index: 5;
    transform: translateZ(200px);
    animation: foregroundPositionZ linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 100vh;
}
/* parallax image animation */
@keyframes backgroundPositionZ {
    from{
        transform: translateZ(100px);
    }
    to{
        transform: translateZ(0px);
    }
}
@keyframes midgroundPositionZ {
    from{
        transform: translateZ(-70px);
    }
    to{
        transform: translateZ(0px);
    }
}
@keyframes foregroundPositionZ {
    from{
        transform: translateZ(200px) ;
    }
    to{
        transform: translateZ(0px) ;
    }
}

#big-title{
    position: absolute;
    left: 27rem;
    z-index: 7;
    transform: translateY(0px);
    opacity: 1.5;
    animation: Title linear forwards;
    animation-timeline: view();
    animation-range: entry 0% exit 80%;
}
#smaller-title{
    position: absolute;
    /* top: 23rem;
    left: 37rem; */
    z-index: 7;
    transform: translateY(0px);
    opacity: 1.5;
    animation: Title linear forwards;
    animation-timeline: view();
    animation-range: entry 0% exit 99%;
}
/* parallax title animation */
@keyframes Title {
    from{
        transform: translateY(0px);
        opacity: 1.5;
    }
    to{
        transform: translateY(-50px);
        opacity: 0;
    }
}

.section1{
    width: 100vh;
    height: 120vh;
    /* perspective: 800px; */
    /* display: flex;
    flex-direction: column;
    align-items: center;
    /* justify-content: center; */
    /*justify-content: space-between; */
}

/* Since I don't want to much of negative spaces in my work, and to enhance the feeling of the stacked cards effect, I add the alpha value to the background-color.  */
.section2{
    color: yellow;
    /* position: relative; */
    background: rgba(15, 15, 15, 0.9);
    height: 150vh;
    
}
.section3{
    /* color: rgb(255, 255, 255); */
    /* position: relative; */
    background: rgb(15, 15, 15);
    height: 150vh;
}
.section4{
    /* color: rgb(255, 255, 255); */
    /* position: relative; */
    background: rgb(15, 15, 15);
    height: 150vh;
}

.section-only{
    /* position: relative; */
    background-color: rgb(15, 15, 15, 0.9);
    height: 100vh;
}
/* In this part, the alphs value in the background color of the section styleing make the image become a bit clearly transparent, and I don't understand why. Therefore, I reduce its brightness instead so I can give more highlight to the text. */
.section-only img {
    filter: brightness(0.8);
}


.inner-container{
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    /* border: 1px white solid; */
    flex-wrap: wrap;
    justify-content: space-evenly;
}
#left{
    display: flex;
    flex-direction: column;
    /* align-items: center; */
    justify-content: center;
    /* border: 1px white solid; */
    width: max-content;
    height: max-content;
    font-family: "Zain", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: 1.3rem;
    padding: 1rem;
    transform: translateY(0px);
    animation: appear linear;
    animation-timeline: view();
    animation-range: entry 0% cover 50vh;
}
.name-title{
    font-size: 2rem;
    font-weight: 800;
}
.main{
    height: max-content;
}
#center-img{
    width: 468px;
    height: 599px;
    animation: appear linear;
    transform: translateY(0px);
    animation-timeline: view();
    animation-range: entry 0% cover 50vh;
}
@keyframes appear{
    from{
        opacity: 0;
        scale: 0.5;
        transform: translateY(0px);
    }
    to{
        opacity: 1;
        scale: 1;
        transform: translateY(20px);
    }
}

/* first person to be photographed */
.parallax-2{
    position: relative;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    /* border: 1px white solid; */
    perspective: 800px;
}
.parallax-2 img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
    height: 100vh;
    z-index: 5;
}
#left-text{
    position: absolute;
    left: 2rem;
    color: yellow;
    background-color: rgba(15, 15, 15, 0.9);
    font-family: "Zain", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: 1.3rem;
    padding: 1rem;
    animation: appear both;
    transform: translateY(0px);
    animation-timeline: view();
    animation-range: entry 10% cover 100vh;
    z-index: 6;
}
#right-text{
    position: absolute;
    left: 50rem;
    color: yellow;
    font-size: 1rem;
    background-color: rgba(0, 0, 0, 0.9);
    font-family: "Zain", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: 1.3rem;
    padding: 1rem;
    animation: appear both;
    transform: translateY(0px);
    animation-timeline: view();
    animation-range: entry 10% cover 100vh;
    z-index: 6;
}
.bigger{
    /* padding-bottom: 0.5rem; */
    font-size: 2rem;
    font-weight: 800;
}
#person-background{
    z-index: 5;
    transform: translateZ(-300px);
    animation: backgroundPositionZ linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 100vh;
}
#person-separated{
    z-index: 6;
    transform: translateZ(500px);
    animation: personPositionZ linear forwards;
    animation-timeline: view();
    animation-range: entry 0% cover 100vh;
}


#only{
    position: absolute;
    /* left: 50rem; */
    color: yellow;
    font-size: 1rem;
    background-color: rgba(0, 0, 0, 0.9);
    font-family: "Zain", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: 1.3rem;
    padding: 1rem;
    animation: appear both;
    transform: translateY(0px);
    animation-timeline: view();
    animation-range: entry 10% cover 100vh;
    z-index: 6;
}

@keyframes personBackgroundPositionZ {
    from{
        transform: translateZ(-300px);
    }
    to{
        transform: translateZ(0px);
    }
}
@keyframes personPositionZ {
    from{
        transform: translateZ(500px);
    }
    to{
        transform: translateZ(0px);
    }
}


/* In this part, as you already know, I faced some challenged achieving the desired effect. I want to apply the code from this video (https://youtu.be/4yBxb5RQxPs) to this last section. However there's some defferent in the position of my section that made it didn't work as expected. */

/* I have worked for different methods. I tried to put the image inside a <div> and make it remain visible while scrolling and the text, which is the cards <div>, will appear one by one on top of the image along the Y axis and faking the translateY() animation. However, there's still some glitch that I couldn't fix. I'll work more on that. */
/* Update on Thursday 23/10/2025: I found a better way to solve the problem which is to turn the animation into a video and play it along while scrolling down. However, it performs very jiggly animation and require etremely heavy mp4 file to perform better, which I can't commit to Github (here is an prototype of it if you want to check out:  I also cameback to the problem and try to solve it again by using more outside <div> container but it still didn't work properly. So I think this is the best version I can produce. Thank you for you support and for giving me a second chance*/
/* last section styling */
.parallax-3{
    position: relative;
    width: 100%;
    height: 100vh;
    background-color: rgba(0, 0, 0, 1);
    display: flex;
    align-items: center;
    justify-content: center;
    /* border: 1px rgb(0, 34, 255) solid; */
    perspective: 800px;
}
.parallax-3 img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
    height: 100vh;
    z-index: 5;
}
/* .last-img{
    position: absolute;
    z-index: 5;
} */
/* .stacked-reveal{
    z-index: 6;
    position: absolute;
} */
.cards{
    height: 100px;
    width: 100px;
    border: 1px yellow solid;
    background-color: rgba(0, 0, 0, 0.5);
    position: absolute;
    top: calc(50vh - 50px);
    left: calc(50vw - 50px);
}
.sticky-inner{
    position: sticky;
    z-index: 4;
    top: 0;
}
